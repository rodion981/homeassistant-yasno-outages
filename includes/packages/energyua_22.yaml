############################################
# includes/packages/energyua_22.yaml
# Графік відключень (Черга 2-2): парсинг + сенсори + антизалипання "завтра"
############################################

# 1) MULTISCRAPE: тягнемо сирі тексти (з анти-кешем)
multiscrape:
  - name: energyua_22
    resource_template: "https://kyiv.energy-ua.info/cherga/2-2?_={{ now().timestamp()|int }}"       # посилання можна змінити на свою чергу
    scan_interval: 3600
    headers:
      Referer: https://kyiv.energy-ua.info/
      User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) HomeAssistant
      Accept-Language: uk-UA,uk;q=0.9
    sensor:
      # ---- СЬОГОДНІ: беремо до двох періодів ----
      - name: energyua_22_today_slot1_start_text
        select: "body"
        value_template: >-
          {% set m = (value | regex_findall('Періоди відключень на сьогодні([\\s\\S]*?)(Періоди відключень на завтра|$)')) %}
          {% set sec = m[0][0] if m else '' %}
          {% set p = sec | regex_findall('З\\s*(\\d{1,2}:\\d{2})\\s*до\\s*(\\d{1,2}:\\d{2})') %}
          {{ p[0][0] if p|length >= 1 else '' }}

      - name: energyua_22_today_slot1_end_text
        select: "body"
        value_template: >-
          {% set m = (value | regex_findall('Періоди відключень на сьогодні([\\s\\S]*?)(Періоди відключень на завтра|$)')) %}
          {% set sec = m[0][0] if m else '' %}
          {% set p = sec | regex_findall('З\\s*(\\d{1,2}:\\d{2})\\s*до\\s*(\\d{1,2}:\\d{2})') %}
          {{ p[0][1] if p|length >= 1 else '' }}

      - name: energyua_22_today_slot1_duration_h_text
        select: "body"
        value_template: >-
          {% set m = (value | regex_findall('Періоди відключень на сьогодні([\\s\\S]*?)(Періоди відключень на завтра|$)')) %}
          {% set sec = m[0][0] if m else '' %}
          {% set d = sec | regex_findall('тривалість\\s*(\\d+)\\s*год') %}
          {{ d[0] if d|length >= 1 else '' }}
        unit_of_measurement: "год"

      - name: energyua_22_today_slot2_start_text
        select: "body"
        value_template: >-
          {% set m = (value | regex_findall('Періоди відключень на сьогодні([\\s\\S]*?)(Періоди відключень на завтра|$)')) %}
          {% set sec = m[0][0] if m else '' %}
          {% set p = sec | regex_findall('З\\s*(\\d{1,2}:\\d{2})\\s*до\\s*(\\d{1,2}:\\d{2})') %}
          {{ p[1][0] if p|length >= 2 else '' }}

      - name: energyua_22_today_slot2_end_text
        select: "body"
        value_template: >-
          {% set m = (value | regex_findall('Періоди відключень на сьогодні([\\s\\S]*?)(Періоди відключень на завтра|$)')) %}
          {% set sec = m[0][0] if m else '' %}
          {% set p = sec | regex_findall('З\\s*(\\d{1,2}:\\d{2})\\s*до\\s*(\\д{1,2}:\\д{2})') %}
          {{ p[1][1] if p|length >= 2 else '' }}

      - name: energyua_22_today_slot2_duration_h_text
        select: "body"
        value_template: >-
          {% set m = (value | regex_findall('Періоди відключень на сьогодні([\\s\\S]*?)(Періоди відключень на завтра|$)')) %}
          {% set sec = m[0][0] if m else '' %}
          {% set d = sec | regex_findall('тривалість\\s*(\\d+)\\s*год') %}
          {{ d[1] if d|length >= 2 else '' }}
        unit_of_measurement: "год"

      # ---- ЗАВТРА: беремо до двох періодів ----
      - name: energyua_22_tomorrow_slot1_start_text
        select: "body"
        value_template: >-
          {% set sec = (value | regex_findall('Періоди відключень на завтра([\\s\\S]*)'))[0] if (value | regex_findall('Періоди відключень на завтра([\\s\\С]*)')) else '' %}
          {% set p = sec | regex_findall('З\\s*(\\d{1,2}:\\д{2})\\s*до\\s*(\\д{1,2}:\\д{2})') %}
          {{ p[0][0] if p|length >= 1 else '' }}

      - name: energyua_22_tomorrow_slot1_end_text
        select: "body"
        value_template: >-
          {% set sec = (value | regex_findall('Періоди відключень на завтра([\\s\\S]*)'))[0] if (value | regex_findall('Періоди відключень на завтра([\\s\\С]*)')) else '' %}
          {% set p = sec | regex_findall('З\\s*(\\д{1,2}:\\д{2})\\s*до\\s*(\\д{1,2}:\\д{2})') %}
          {{ p[0][1] if p|length >= 1 else '' }}

      - name: energyua_22_tomorrow_slot1_duration_h_text
        select: "body"
        value_template: >-
          {% set sec = (value | regex_findall('Періоди відключень на завтра([\\s\\S]*)'))[0] if (value | regex_findall('Періоди відключень на завтра([\\s\\С]*)')) else '' %}
          {% set d = sec | regex_findall('тривалість\\s*(\\д+)\\s*год') %}
          {{ d[0] if d|length >= 1 else '' }}
        unit_of_measurement: "год"

      - name: energyua_22_tomorrow_slot2_start_text
        select: "body"
        value_template: >-
          {% set sec = (value | regex_findall('Періоди відключень на завтра([\\s\\S]*)'))[0] if (value | regex_findall('Періоди відключень на завтра([\\s\\С]*)')) else '' %}
          {% set p = sec | regex_findall('З\\s*(\\д{1,2}:\\д{2})\\s*до\\s*(\\д{1,2}:\\д{2})') %}
          {{ p[1][0] if p|length >= 2 else '' }}

      - name: energyua_22_tomorrow_slot2_end_text
        select: "body"
        value_template: >-
          {% set sec = (value | regex_findall('Періоди відключень на завтра([\\s\\S]*)'))[0] if (value | regex_findall('Періоди відключень на завтра([\\s\\С]*)')) else '' %}
          {% set p = sec | regex_findall('З\\s*(\\д{1,2}:\\д{2})\\s*до\\s*(\\д{1,2}:\\д{2})') %}
          {{ p[1][1] if p|length >= 2 else '' }}

      - name: energyua_22_tomorrow_slot2_duration_h_text
        select: "body"
        value_template: >-
          {% set sec = (value | regex_findall('Періоди відключень на завтра([\\s\\S]*)'))[0] if (value | regex_findall('Періоди відключень на завтра([\\s\\С]*)')) else '' %}
          {% set d = sec | regex_findall('тривалість\\s*(\\д+)\\s*год') %}
          {{ d[1] if d|length >= 2 else '' }}
        unit_of_measurement: "год"


# 2) TEMPLATE-СЕНСОРИ (класичний формат)
sensor:
  - platform: template
    sensors:
      # ---- Прапорець "дані на завтра свіжі" ----
      energyua_22_tomorrow_fresh:
        friendly_name: "Завтра: дані свіжі"
        value_template: >-
          {% set t1 = states('sensor.energyua_22_tomorrow_slot1_start_text')|trim %}
          {% set t2 = states('sensor.energyua_22_tomorrow_slot2_start_text')|trim %}
          {% set has_any = (t1|regex_match('^\\д{1,2}:\\д{2}$') or t2|regex_match('^\\д{1,2}:\\д{2}$')) %}
          {% if not has_any %}
            false
          {% else %}
            {% set td1 = states('sensor.energyua_22_today_slot1_start_text')|trim %}
            {% set td2 = states('sensor.energyua_22_today_slot2_start_text')|trim %}
            {% set same_as_today = (t1 and t1 in [td1, td2]) or (t2 and t2 in [td1, td2]) %}
            {{ not same_as_today }}
          {% endif %}

      # ===== СЬОГОДНІ: слот 1 =====
      energyua_22_today_slot1_start:
        friendly_name: "Сьогодні: початок 1-го періоду"
        device_class: timestamp
        value_template: >-
          {% set t = states('sensor.energyua_22_today_slot1_start_text')|trim %}
          {% if t and t|regex_match('^\\д{1,2}:\\д{2}$') %}
            {{ today_at(t ~ ':00') }}
          {% endif %}

      energyua_22_today_slot1_end:
        friendly_name: "Сьогодні: кінець 1-го періоду"
        device_class: timestamp
        value_template: >-
          {% set t = states('sensor.energyua_22_today_slot1_end_text')|trim %}
          {% if t and t|regex_match('^\\д{1,2}:\\д{2}$') %}
            {{ today_at(t ~ ':00') }}
          {% endif %}

      energyua_22_today_slot1_duration_h:
        friendly_name: "Сьогодні: тривалість 1-го, год"
        unit_of_measurement: "год"
        value_template: "{{ states('sensor.energyua_22_today_slot1_duration_h_text')|trim }}"

      # ===== СЬОГОДНІ: слот 2 =====
      energyua_22_today_slot2_start:
        friendly_name: "Сьогодні: початок 2-го періоду"
        device_class: timestamp
        value_template: >-
          {% set t = states('sensor.energyua_22_today_slot2_start_text')|trim %}
          {% if t and t|regex_match('^\\д{1,2}:\\д{2}$') %}
            {{ today_at(t ~ ':00') }}
          {% endif %}

      energyua_22_today_slot2_end:
        friendly_name: "Сьогодні: кінець 2-го періоду"
        device_class: timestamp
        value_template: >-
          {% set t = states('sensor.energyua_22_today_slot2_end_text')|trim %}
          {% if t and t|regex_match('^\\д{1,2}:\\д{2}$') %}
            {{ today_at(t ~ ':00') }}
          {% endif %}

      energyua_22_today_slot2_duration_h:
        friendly_name: "Сьогодні: тривалість 2-го, год"
        unit_of_measurement: "год"
        value_template: "{{ states('sensor.energyua_22_today_slot2_duration_h_text')|trim }}"

      # ===== ЗАВТРА: слот 1 =====
      energyua_22_tomorrow_slot1_start:
        friendly_name: "Завтра: початок 1-го періоду"
        device_class: timestamp
        availability_template: "{{ is_state('sensor.energyua_22_tomorrow_fresh', 'True') }}"
        value_template: >-
          {% set t = states('sensor.energyua_22_tomorrow_slot1_start_text')|trim %}
          {% if t and t|regex_match('^\\д{1,2}:\\д{2}$') %}
            {{ today_at(t ~ ':00') + timedelta(days=1) }}
          {% endif %}

      energyua_22_tomorrow_slot1_end:
        friendly_name: "Завтра: кінець 1-го періоду"
        device_class: timestamp
        availability_template: "{{ is_state('sensor.energyua_22_tomorrow_fresh', 'True') }}"
        value_template: >-
          {% set t = states('sensor.energyua_22_tomorrow_slot1_end_text')|trim %}
          {% if t and t|regex_match('^\\д{1,2}:\\д{2}$') %}
            {{ today_at(t ~ ':00') + timedelta(days=1) }}
          {% endif %}

      energyua_22_tomorrow_slot1_duration_h:
        friendly_name: "Завтра: тривалість 1-го, год"
        unit_of_measurement: "год"
        availability_template: "{{ is_state('sensor.energyua_22_tomorrow_fresh', 'True') }}"
        value_template: "{{ states('sensor.energyua_22_tomorrow_slot1_duration_h_text')|trim }}"

      # ===== ЗАВТРА: слот 2 =====
      energyua_22_tomorrow_slot2_start:
        friendly_name: "Завтра: початок 2-го періоду"
        device_class: timestamp
        availability_template: "{{ is_state('sensor.energyua_22_tomorrow_fresh', 'True') }}"
        value_template: >-
          {% set t = states('sensor.energyua_22_tomorrow_slot2_start_text')|trim %}
          {% if t and t|regex_match('^\\д{1,2}:\\д{2}$') %}
            {{ today_at(t ~ ':00') + timedelta(days=1) }}
          {% endif %}

      energyua_22_tomorrow_slot2_end:
        friendly_name: "Завтра: кінець 2-го періоду"
        device_class: timestamp
        availability_template: "{{ is_state('sensor.energyua_22_tomorrow_fresh', 'True') }}"
        value_template: >-
          {% set t = states('sensor.energyua_22_tomorrow_slot2_end_text')|trim %}
          {% if t and t|regex_match('^\\д{1,2}:\\д{2}$') %}
            {{ today_at(t ~ ':00') + timedelta(days=1) }}
          {% endif %}

      energyua_22_tomorrow_slot2_duration_h:
        friendly_name: "Завтра: тривалість 2-го, год"
        unit_of_measurement: "год"
        availability_template: "{{ is_state('sensor.energyua_22_tomorrow_fresh', 'True') }}"
        value_template: "{{ states('sensor.energyua_22_tomorrow_slot2_duration_h_text')|trim }}"

      # ===== СЬОГОДНІ: коротко (без .append) =====
      energyua_22_today_brief:
        friendly_name: "Сьогодні: коротко"
        icon_template: mdi:calendar-today
        availability_template: "{{ true }}"
        value_template: >-
          {% set bad = ['unknown','unavailable','none','','None'] %}
          {% set s1 = states('sensor.energyua_22_today_slot1_start')|default('', true) %}
          {% set e1 = states('sensor.energyua_22_today_slot1_end')|default('', true) %}
          {% set d1 = states('sensor.energyua_22_today_slot1_duration_h')|default('', true) %}
          {% set s2 = states('sensor.energyua_22_today_slot2_start')|default('', true) %}
          {% set e2 = states('sensor.energyua_22_today_slot2_end')|default('', true) %}
          {% set d2 = states('sensor.energyua_22_today_slot2_duration_h')|default('', true) %}
          {% set r1 = '' %}
          {% if s1 not in bad and e1 not in bad and as_datetime(s1) and as_datetime(e1) %}
            {% set s_txt = (as_timestamp(as_datetime(s1)|as_local) | timestamp_custom('%H:%M')) %}
            {% set e_txt = (as_timestamp(as_datetime(e1)|as_local) | timestamp_custom('%H:%M')) %}
            {% set r1 = 'З ' ~ s_txt ~ ' до ' ~ e_txt ~ ( ' (' ~ d1 ~ ' год)' if d1|trim not in bad else '' ) %}
          {% endif %}
          {% set r2 = '' %}
          {% if s2 not in bad and e2 not in bad and as_datetime(s2) and as_datetime(e2) %}
            {% set s_txt = (as_timestamp(as_datetime(s2)|as_local) | timestamp_custom('%H:%M')) %}
            {% set e_txt = (as_timestamp(as_datetime(e2)|as_local) | timestamp_custom('%H:%M')) %}
            {% set r2 = 'З ' ~ s_txt ~ ' до ' ~ e_txt ~ ( ' (' ~ d2 ~ ' год)' if d2|trim not in bad else '' ) %}
          {% endif %}
          {% if r1 and r2 %}{{ r1 ~ ';\n' ~ r2 }}
          {% elif r1 %}{{ r1 }}
          {% elif r2 %}{{ r2 }}
          {% else %}Даних на сьогодні немає{% endif %}

      # ===== ЗАВТРА: коротко (тільки коли свіжі) =====
      energyua_22_tomorrow_brief:
        friendly_name: "Завтра: коротко"
        icon_template: mdi:calendar-clock
        availability_template: "{{ is_state('sensor.energyua_22_tomorrow_fresh', 'True') }}"
        value_template: >-
          {% set bad = ['unknown','unavailable','none','','None'] %}
          {% set s1 = states('sensor.energyua_22_tomorrow_slot1_start')|default('', true) %}
          {% set e1 = states('sensor.energyua_22_tomorrow_slot1_end')|default('', true) %}
          {% set d1 = states('sensor.energyua_22_tomorrow_slot1_duration_h')|default('', true) %}
          {% set s2 = states('sensor.energyua_22_tomorrow_slot2_start')|default('', true) %}
          {% set e2 = states('sensor.energyua_22_tomorrow_slot2_end')|default('', true) %}
          {% set d2 = states('sensor.energyua_22_tomorrow_slot2_duration_h')|default('', true) %}
          {% set r1 = '' %}
          {% if s1 not in bad and e1 not in bad and as_datetime(s1) and as_datetime(e1) %}
            {% set s_txt = (as_timestamp(as_datetime(s1)|as_local) | timestamp_custom('%H:%M')) %}
            {% set e_txt = (as_timestamp(as_datetime(e1)|as_local) | timestamp_custom('%H:%M')) %}
            {% set r1 = 'З ' ~ s_txt ~ ' до ' ~ e_txt ~ ( ' (' ~ d1 ~ ' год)' if d1|trim not in bad else '' ) %}
          {% endif %}
          {% set r2 = '' %}
          {% if s2 not in bad and e2 not in bad and as_datetime(s2) and as_datetime(e2) %}
            {% set s_txt = (as_timestamp(as_datetime(s2)|as_local) | timestamp_custom('%H:%M')) %}
            {% set e_txt = (as_timestamp(as_datetime(e2)|as_local) | timestamp_custom('%H:%M')) %}
            {% set r2 = 'З ' ~ s_txt ~ ' до ' ~ e_txt ~ ( ' (' ~ d2 ~ ' год)' if d2|trim not in bad else '' ) %}
          {% endif %}
          {% if r1 and r2 %}{{ r1 ~ ';\n' ~ r2 }}
          {% elif r1 %}{{ r1 }}
          {% elif r2 %}{{ r2 }}
          {% else %}Даних на завтра немає{% endif %}


# 3) БІНАРНИК: відключення зараз
binary_sensor:
  - platform: template
    sensors:
      energyua_22_outage_now:
        friendly_name: "Відключення зараз"
        value_template: >-
          {% set nowt = now() %}
          {% set slots = [
            (states('sensor.energyua_22_today_slot1_start'), states('sensor.energyua_22_today_slot1_end')),
            (states('sensor.energyua_22_today_slot2_start'), states('sensor.energyua_22_today_slot2_end'))
          ] %}
          {% for s,e in slots %}
            {% if s and e and s not in ['unknown','unavailable','none',''] and e not in ['unknown','unavailable','none',''] %}
              {% if nowt >= as_datetime(s) and nowt < as_datetime(e) %}
                {{ true }}
              {% endif %}
            {% endif %}
          {% endfor %}
          {{ false }}
        icon_template: >-
          {{ 'mdi:power-plug-off' if is_state('binary_sensor.energyua_22_outage_now','on') else 'mdi:power-plug' }}
